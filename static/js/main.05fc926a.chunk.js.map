{"version":3,"sources":["components/Tab/TabItem.tsx","components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["TabItem","tab","isActiveTab","onTabSelected","className","classNames","href","id","onClick","title","Tabs","tabs","selectedTabId","selectedTab","find","isNoTabSelected","every","map","index","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAA2B,SAAC,GAIlC,IAHLC,EAGI,EAHJA,IACAC,EAEI,EAFJA,YACAC,EACI,EADJA,cAQA,OACE,oBACEC,UAAWC,IAAW,CACpB,YAAaH,IAEf,UAAQ,MAJV,SAOE,mBAAGI,KAAI,WAAML,EAAIM,IAAM,UAAQ,UAAUC,QAdxB,WACdN,GACHC,EAAcF,IAYd,SACGA,EAAIQ,SAHFR,EAAIM,KCjBFG,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAT,EACI,EADJA,cAEMU,EAAcF,EAAKG,MAAK,qBAAGP,KAAgBK,KAE3CG,EAAkBJ,EAAKK,OAC3B,qBAAGT,KAA8BK,KAGnC,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKR,UAAU,gBAAf,SACE,6BACGO,EAAKM,KAAI,SAAChB,EAAKiB,GACd,IAEMhB,EAFgBD,EAAIM,KAAOK,GAG7BG,GAFyB,IAAVG,EAInB,OACE,cAAC,EAAD,CACEjB,IAAKA,EACLC,YAAaA,EACbC,cAAeA,WAOzB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,gBACGS,QADH,IACGA,OADH,EACGA,EAAaM,cCnCTR,EAAc,CACzB,CAAEJ,GAAI,QAASE,MAAO,QAASU,QAAS,eACxC,CAAEZ,GAAI,QAASE,MAAO,QAASU,QAAS,eACxC,CAAEZ,GAAI,QAASE,MAAO,QAASU,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAAiBV,EAAK,GAAGJ,IAAnE,mBAAOK,EAAP,KAAsBU,EAAtB,KAEMT,EAAcF,EAAKG,MAAK,qBAAGP,KAAqBK,KAItD,OACE,sBAAKR,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,0CACsBS,QADtB,IACsBA,OADtB,EACsBA,EAAaJ,SAGnC,cAAC,EAAD,CACEE,KAAMA,EACNC,cAAeA,EACfT,cAXkB,SAAC,GAAD,IAAGI,EAAH,EAAGA,GAAH,OAAiBe,EAAiBf,UCf5DgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.05fc926a.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ninterface Props {\n  tab: Tab;\n  isActiveTab: boolean;\n  onTabSelected: (tab: Tab) => void;\n\n}\nexport const TabItem: React.FC<Props> = ({\n  tab,\n  isActiveTab,\n  onTabSelected,\n}) => {\n  const handleSelect = () => {\n    if (!isActiveTab) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <li\n      className={classNames({\n        'is-active': isActiveTab,\n      })}\n      data-cy=\"Tab\"\n      key={tab.id}\n    >\n      <a href={`#${tab.id}`} data-cy=\"TabLink\" onClick={handleSelect}>\n        {tab.title}\n      </a>\n    </li>\n  );\n};\n","import { Tab } from '../../types/Tab';\nimport { TabItem } from '../Tab/TabItem';\n\ninterface Props {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n}\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab = tabs.find(({ id }) => id === selectedTabId);\n\n  const isNoTabSelected = tabs.every(\n    ({ id }: Tab): boolean => id !== selectedTabId,\n  );\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab, index) => {\n            const isTabSelected = tab.id === selectedTabId;\n            const isFirstTab = index === 0;\n            const isActiveTab = isTabSelected\n            || (isNoTabSelected && isFirstTab);\n\n            return (\n              <TabItem\n                tab={tab}\n                isActiveTab={isActiveTab}\n                onTabSelected={onTabSelected}\n              />\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab?.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState<string>(tabs[0].id);\n\n  const selectedTab = tabs.find(({ id }: Tab) => id === selectedTabId);\n\n  const handleTabSelect = ({ id }: Tab) => setSelectedTabId(id);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab?.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={handleTabSelect}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}