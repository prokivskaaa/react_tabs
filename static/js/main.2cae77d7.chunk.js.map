{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","id","isNoTabSelected","every","className","map","tab","index","isActiveTab","classNames","href","onClick","title","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAcH,EAAKI,MAAK,qBAAGC,KAA8BJ,KAEzDK,EAAkBN,EAAKO,OAC3B,qBAAGF,KAA8BJ,KAGnC,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGR,EAAKS,KAAI,SAACC,EAAKC,GACd,IAEMC,EAFgBF,EAAIL,KAAOJ,GAG7BK,GAFyB,IAAVK,EAInB,OACE,oBACEH,UAAWK,IAAW,CACpB,YAAaD,IAEf,UAAQ,MAJV,SAOE,mBACEE,KAAI,WAAMJ,EAAIL,IACd,UAAQ,UACRU,QAAS,WACFH,GACHV,EAAcQ,IALpB,SASGA,EAAIM,SAXFN,EAAIL,WAmBnB,qBAAKG,UAAU,QAAQ,UAAQ,aAA/B,gBACGL,QADH,IACGA,OADH,EACGA,EAAac,cCjDTjB,EAAc,CACzB,CAAEK,GAAI,QAASW,MAAO,QAASC,QAAS,eACxC,CAAEZ,GAAI,QAASW,MAAO,QAASC,QAAS,eACxC,CAAEZ,GAAI,QAASW,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAAiBnB,EAAK,GAAGK,IAAnE,mBAAOJ,EAAP,KAAsBmB,EAAtB,KAEMjB,EAAcH,EAAKI,MAAK,qBAAGC,KAAqBJ,KAItD,OACE,sBAAKO,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,0CAA0CL,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAaa,SAEvD,cAAC,EAAD,CACEhB,KAAMA,EACNC,cAAeA,EACfC,cATkB,SAAC,GAAD,IAAGG,EAAH,EAAGA,GAAH,OAAiBe,EAAiBf,UCf5DgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2cae77d7.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ninterface Props {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n}\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab = tabs.find(({ id }: Tab): boolean => id === selectedTabId);\n\n  const isNoTabSelected = tabs.every(\n    ({ id }: Tab): boolean => id !== selectedTabId,\n  );\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab, index) => {\n            const isTabSelected = tab.id === selectedTabId;\n            const isFirstTab = index === 0;\n            const isActiveTab = isTabSelected\n            || (isNoTabSelected && isFirstTab);\n\n            return (\n              <li\n                className={classNames({\n                  'is-active': isActiveTab,\n                })}\n                data-cy=\"Tab\"\n                key={tab.id}\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => {\n                    if (!isActiveTab) {\n                      onTabSelected(tab);\n                    }\n                  }}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab?.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState<string>(tabs[0].id);\n\n  const selectedTab = tabs.find(({ id }: Tab) => id === selectedTabId);\n\n  const handleTabSelect = ({ id }: Tab) => setSelectedTabId(id);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">{`Selected tab is ${selectedTab?.title}`}</h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={handleTabSelect}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}